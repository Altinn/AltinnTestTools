name: Azure_Function_CD

on:
  push:
    # This file is only for TokenGenerator. Only deploy tagged commits.
    paths:
      - 'TokenGenerator/**'
    tags:
      - 'v*.*.*'

# CONFIGURATION
# 1. Create a service principal for GitHub to use:
#     az ad sp create-for-rbac --name "{nameForServicePrincipal}" --role contributor \
#        --scopes /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Web/sites/{functionAppName} --sdk-auth
#
# 2. Paste the RBAC json into the following secret in your repository:
#   AZURE_RBAC_CREDENTIALS
#
# 3. Change these variables for your configuration:
#
# 4. Add to .github/workflows/main.yml, and commit/push to GitHub
#
env:
  AZURE_FUNCTIONAPP_NAME: altinn-testtools-token-generator  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1'              # set this to the dotnet version to use

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }}

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Run dotnet'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

